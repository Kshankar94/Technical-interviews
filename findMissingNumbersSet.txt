package com.company;

import java.util.*;

public class Main {

    public static void main(String[] args) {
	// write your code here

        int[] nums = {1,3,5,7,8,9,13};
        int start = 1, end = 12;

        List<Integer> result = findMissingNumbers(nums, start, end);

        System.out.println(Arrays.asList(result));

        List<String> resultString = postProcessing(result);

        System.out.println(Arrays.asList(resultString));
    }


    private static List<Integer> findMissingNumbers(int[] nums, int start, int end) {

        Set<Integer> numsSet = new HashSet<>();
        List<Integer> result = new ArrayList<>();

        for(Integer num: nums) {
            numsSet.add(num);
        }

        for(int i = start; i <= end; i++) {
            if(!numsSet.contains(i)) {
                result.add(i);
            }
        }
        return result;

    }


	private static List<String> postProcessing(List<Integer> result) {

        List<String> resultString = new ArrayList<>();

        int start = result.get(0), end = result.get(0);
        for (int i = 0; i < result.size() - 1; i++) {
            if (Math.abs(result.get(i) - result.get(i + 1)) == 1) {
                end = result.get(i + 1);
            } else {
                String value = hyphenLogic(start, end);
                resultString.add(value);

                if ((i + 1) <= result.size() - 1) {
                    start = result.get(i + 1);
                    end = result.get(i + 1);
                }
            }

        }

        String value = hyphenLogic(start, end);
        resultString.add(value);
        return resultString;
    }


    private static String hyphenLogic(int start, int end){
        String value;
        if (start == end) {
            value = Integer.toString(start);
        } else {
            value = Integer.toString(start) + "-" + Integer.toString(end);
        }
        return value;
    }
}
